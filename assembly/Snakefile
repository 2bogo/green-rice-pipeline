BASE_DIR = './'
ONT_PATH = "/data/yeah-zin/greenRice2/seq/ont/"
MGI_PATH = "/data/yeah-zin/greenRice2/seq/mgi/"
REF_PATH = "/data/yeah-zin/greenRice2/seq/ref/"

workdir: BASE_DIR

SAMPLES, = glob_wildcards(ONT_PATH + "{sample}.fastq.gz")

rule all:
    input: expand("{sample}/multi_busco/short_summary.specific.liliopsida_odb10.multi_busco.txt", sample=SAMPLES)

rule assembly:
    input:
        ONT_PATH + "{sample}.fastq.gz"
    output:
        "{sample}/denovo/01_rundir/03.ctg_graph/nd.asm.fasta"
    shell: """
        mkdir -p {wildcards.sample}/denovo
        ls {ONT_PATH}{wildcards.sample}.fastq.gz > {wildcards.sample}/denovo/input.fofn
        cp script/run.cfv {wildcards.sample}/denovo/
        nextDenovo {wildcards.sample}/denovo/run.cfv
    """

rule polishing1:
    input:
        "{sample}/denovo/01_rundir/03.ctg_graph/nd.asm.fasta"
    output:
        "{sample}/multi_polishing/01_rundir/genome.nextpolish.fasta"
    shell: """
        mkdir -p {wildcards.sample}/multi_polishing
        ls {MGI_PATH}{wildcards.sample}/qc/*_paired.fq.gz > {wildcards.sample}/multi_polishing/sgs.fofn
        ls {ONT_PATH}{wildcards.sample}.fastq.gz > {wildcards.sample}/multi_polishing/lgs.fofn
        cp script/run1.cfg {wildcards.sample}/multi_polishing/
        nextPolish {wildcards.sample}/multi_polishing/run1.cfg
    """

rule polishing2:
    input:
        "{sample}/multi_polishing/01_rundir/genome.nextpolish.fasta"
    output:
        "{sample}/multi_polishing/02_rundir/genome.nextpolish.fasta"
    shell: """
        cp script/run2.cfg {wildcards.sample}/multi_polishing/
        nextPolish {wildcards.sample}/multi_polishing/run2.cfg
    """

rule polishing3:
    input:
        "{sample}/multi_polishing/02_rundir/genome.nextpolish.fasta"
    output:
        "{sample}/multi_polishing/03_rundir/genome.nextpolish.fasta"
    shell: """
        cp script/run3.cfg {wildcards.sample}/multi_polishing/
        nextPolish {wildcards.sample}/multi_polishing/run3.cfg
    """

rule ragtag:
    input:
        query = "{sample}/multi_polishing/03_rundir/genome.nextpolish.fasta", ref = REF_PATH + "Osativa_323_v7.0.fa.gz"
    output:
        "{sample}/multi_ragtag/ref.guide.scaffold.fasta"
    shell: """
        mkdir -p {wildcards.sample}/multi_ragtag
        ragtag.py scaffold -o {wildcards.sample}/multi_ragtag {input.ref} {input.query}
        sed 's/_RagTag//g' {wildcards.sample}/multi_ragtag/ragtag.scaffold.fasta > {wildcards.sample}/multi_ragtag/ref.guide.scaffold.fasta
    """

rule busco:
    input:
        target = "{sample}/multi_ragtag/ref.guide.scaffold.fasta"
    output:
        "{sample}/multi_busco/short_summary.specific.liliopsida_odb10.multi_busco.txt"
    shell: """
        mkdir -p {wildcards.sample}/multi_busco
        busco -f -c 10 -i {input.target} -o {wildcards.sample}/multi_busco  -m genome -l liliopsida_odb10 --augustus --long
    """
